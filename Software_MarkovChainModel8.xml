<?xml version="1.0" encoding="UTF-8"?>

<Model version="1.0" type="uml:Model" name="Markov_Model" visibility="public" authorNmae="Terence">
  <ModelType>Software_Markov</ModelType>
  <Owned>Software_Itself</Owned>
  <name>Software_MarkovChainModel</name>
  <state label="initial">
    <name>Q0</name>
    <arc label="prob" type="void">
      <name>Q0_S0</name>
      <conditions></conditions>
      <owned>null</owned>
      <prob>1.0</prob>
      <to>S0</to>
    </arc>
  </state>
  <state>
    <name>S0</name>
    <arc label="prob" type="common">
      <name>S0_S1_update_batt_compass()</name>
      <conditions></conditions>
      <owned>update_batt_compass</owned>
      <prob>1.0</prob>
      <to>S1</to>
    </arc>
  </state>
  <state>
    <name>S1</name>
    <arc label="prob" type="common">
      <name>S1_S2_get_control_mode()</name>
      <conditions></conditions>
      <owned>get_control_mode</owned>
      <assignValue>_control_mode</assignValue>
      <assignType>int</assignType>
      <prob>1.0</prob>
      <to>S2</to>
    </arc>
  </state>
  <state>
    <name>S2</name>
    <arc label="prob" type="common">
      <name>S2_S3_armed()</name>
      <conditions></conditions>
      <owned>armed</owned>
      <assignValue>_motors_armed</assignValue>
      <assignType>bool</assignType>
      <prob>1.0</prob>
      <to>S3</to>
    </arc>
  </state>
  <state>
    <name>S3</name>
    <arc label="prob" type="common">
      <name>S3_S4_read_battery()</name>
      <conditions></conditions>
      <owned>read_battery</owned>
      <prob>1.0</prob>
      <to>S4</to>
    </arc>
  </state>
  <state>
    <name>S4</name>
    <arc label="prob" type="common">
      <name>S4_S5_read()</name>
      <conditions></conditions>
      <owned>read</owned>
      <prob>1.0</prob>
      <to>S5</to>
    </arc>
  </state>
  <state>
    <name>S5</name>
    <arc label="prob" type="common">
      <name>S5_S6_has_current()</name>
      <conditions></conditions>
      <owned>has_current</owned>
      <assignValue>has_current</assignValue>
      <assignType>bool</assignType>
      <prob>1.0</prob>
      <to>S6</to>
    </arc>
  </state>
  <state>
    <name>S6</name>
    <arc label="prob" type="common">
      <name>S6_S7_current_amps()</name>
      <conditions>has_current==true#has_current:bool</conditions>
      <owned>current_amps</owned>
      <assignValue>cur_amps</assignValue>
      <assignType>float</assignType>
      <prob>1.0</prob>
      <to>S7</to>
    </arc>
  </state>
  <state>
    <name>S7</name>
    <arc label="prob" type="common">
      <name>S7_S8_set_current(float)</name>
      <conditions>has_current==true#has_current:bool</conditions>
      <owned>set_current</owned>
      <assignValue>cur_amps</assignValue>
      <assignType>float</assignType>
      <prob>1.0</prob>
      <stimulate>
        <parameter>
          <paramName>cur_amps</paramName>
          <paramType>float</paramType>
          <domain type="serial">0&lt;cur_amps&lt;5000</domain>
        </parameter>
      </stimulate>
      <to>S8</to>
    </arc>
  </state>
  <state>
    <name>S8</name>
    <arc label="prob" type="void">
      <name>S8_S9</name>
      <conditions></conditions>
      <owned>null</owned>
      <prob>1.0</prob>
      <to>S9</to>
    </arc>
  </state>
  <state>
    <name>S9</name>
    <arc label="prob" type="common">
      <name>S9_S10_get_type()</name>
      <conditions></conditions>
      <owned>get_type</owned>
      <assignValue>batt_type</assignValue>
      <assignType>int</assignType>
      <prob>1.0</prob>
      <to>S10</to>
    </arc>
  </state>
  <state>
    <name>S10</name>
    <arc label="prob" type="common">
      <name>S10_S11_voltage()</name>
      <conditions>batt_type!=0#batt_type:int</conditions>
      <owned>voltage</owned>
      <assignValue>batt_vol</assignValue>
      <assignType>float</assignType>
      <prob>1.0</prob>
      <to>S11</to>
    </arc>
  </state>
  <state>
    <name>S11</name>
    <arc label="prob" type="common">
      <name>S11_S12_set_voltage(float)</name>
      <conditions>batt_type!=0#batt_type:int</conditions>
      <owned>set_voltage</owned>
      <prob>1.0</prob>
      <stimulate>
        <parameter>
          <paramName>batt_vol</paramName>
          <paramType>float</paramType>
          <domain type="serial">0&lt;batt_vol&lt;5000</domain>
        </parameter>
      </stimulate>
      <to>S12</to>
    </arc>
  </state>
  <state>
    <name>S12</name>
    <arc label="prob" type="void">
      <name>S12_S13</name>
      <conditions></conditions>
      <owned>null</owned>
      <prob>1.0</prob>
      <to>S13</to>
    </arc>
  </state>
  <state>
    <name>S13</name>
    <arc label="prob" type="common">
      <name>S13_S14_current_amps()</name>
      <conditions>has_current==true#has_current:bool</conditions>
      <owned>current_amps</owned>
      <assignValue>cur_amps</assignValue>
      <assignType>float</assignType>
      <prob>1.0</prob>
      <to>S14</to>
    </arc>
  </state>
  <state>
    <name>S14</name>
    <arc label="prob" type="common">
      <name>S14_S15_set_current(float)</name>
      <conditions>has_current==true#has_current:bool</conditions>
      <owned>set_current</owned>
      <prob>1.0</prob>
      <stimulate>
        <parameter>
          <paramName>cur_amps</paramName>
          <paramType>float</paramType>
          <domain type="serial">0&lt;cur_amps&lt;5000</domain>
        </parameter>
      </stimulate>
      <to>S15</to>
    </arc>
  </state>
  <state>
    <name>S15</name>
    <arc label="prob" type="void">
      <name>S15_S16</name>
      <conditions></conditions>
      <owned>null</owned>
      <prob>1.0</prob>
      <to>S16</to>
    </arc>
  </state>
  <state>
    <name>S16</name>
    <arc label="prob" type="common">
      <name>S16_S17_failsafe_battery_event()</name>
      <conditions></conditions>
      <owned>failsafe_battery_event</owned>
      <prob>1.0</prob>
      <to>S17</to>
    </arc>
  </state>
  <state>
    <name>S17</name>
    <arc label="prob" type="common">
      <name>S17_S18_exhausted(float,float)</name>
      <conditions></conditions>
      <owned>exhausted</owned>
      <assignValue>has_exhausted</assignValue>
      <assignType>bool</assignType>
      <prob>1.0</prob>
      <stimulate>
        <parameter>
          <paramName>g.fs_batt_voltage</paramName>
          <paramType>float</paramType>
          <domain type="serial">0&lt;g.fs_batt_voltage&lt;5000</domain>
        </parameter>
        <parameter>
          <paramName>g.fs_batt_mah</paramName>
          <paramType>float</paramType>
          <domain type="serial">0&lt;g.fs_batt_mah&lt;5000</domain>
        </parameter>
      </stimulate>
      <to>S18</to>
    </arc>
  </state>
  <state>
    <name>S18</name>
    <arc label="prob" type="common">
      <name>S18_S19_armed()</name>
      <conditions>failsafe.battery==0 &amp;&amp; has_exhausted==true,0&lt;=failsafe.battery&lt;=1#failsafe.battery:uint8_t,has_exhausted:bool</conditions>
      <owned>armed</owned>
      <assignValue>has_armed</assignValue>
      <assignType>bool</assignType>
      <prob>1.0</prob>
      <to>S19</to>
    </arc>
  </state>
  <state>
    <name>S19</name>
    <arc label="prob" type="common">
      <name>S19_S20_init_disarm_motors()</name>
      <conditions>failsafe.battery==0 &amp;&amp; has_exhausted==true,0&lt;=failsafe.battery&lt;=1#failsafe.battery:uint8_t,has_exhausted:bool,g.failsafe_battery_enabled != 0 &amp;&amp; has_armed==true#g.failsafe_battery_enabled:int,has_armed:bool,control_mode==0 || control_mode==1#control_mode:int8_t,ap.throttle_zero==1 || ap.land_complete==1,0&lt;=ap.throttle_zero&lt;=1,0&lt;=ap.land_complete&lt;=1#ap.land_complete:uint8_t,ap.throttle_zero:uint8_t</conditions>
      <owned>init_disarm_motors</owned>
      <prob>0.1111111111111111</prob>
      <to>S20</to>
    </arc>
    <arc label="prob" type="common">
      <name>S19_S27_set_mode_RTL_or_land_with_pause()</name>
      <conditions>failsafe.battery==0 &amp;&amp; has_exhausted==true,0&lt;=failsafe.battery&lt;=1#failsafe.battery:uint8_t,has_exhausted:bool,g.failsafe_battery_enabled != 0 &amp;&amp; has_armed==true#g.failsafe_battery_enabled:int,has_armed:bool,control_mode==0 || control_mode==1#control_mode:int8_t,ap.throttle_zero==0&amp;&amp;ap.land_complete==0,0&lt;=ap.throttle_zero&lt;=1,0&lt;=ap.land_complete&lt;=1#ap.land_complete:uint8_t,ap.throttle_zero:uint8_t,g.failsafe_battery_enabled == 2 &amp;&amp; home_distance &gt; 500#g.failsafe_battery_enabled:int,home_distance:int32_t</conditions>
      <owned>set_mode_RTL_or_land_with_pause</owned>
      <prob>0.1111111111111111</prob>
      <to>S27</to>
    </arc>
    <arc label="prob" type="common">
      <name>S19_S29_set_mode_land_with_pause()</name>
      <conditions>failsafe.battery==0 &amp;&amp; has_exhausted==true,0&lt;=failsafe.battery&lt;=1#failsafe.battery:uint8_t,has_exhausted:bool,g.failsafe_battery_enabled != 0 &amp;&amp; has_armed==true#g.failsafe_battery_enabled:int,has_armed:bool,control_mode==0 || control_mode==1#control_mode:int8_t,ap.throttle_zero==0&amp;&amp;ap.land_complete==0,0&lt;=ap.throttle_zero&lt;=1,0&lt;=ap.land_complete&lt;=1#ap.land_complete:uint8_t,ap.throttle_zero:uint8_t,g.failsafe_battery_enabled != 2 || home_distance &lt;= 500#g.failsafe_battery_enabled:int,home_distance:int32_t</conditions>
      <owned>set_mode_land_with_pause</owned>
      <prob>0.1111111111111111</prob>
      <to>S29</to>
    </arc>
    <arc label="prob" type="common">
      <name>S19_S31_init_disarm_motors()</name>
      <conditions>failsafe.battery==0 &amp;&amp; has_exhausted==true,0&lt;=failsafe.battery&lt;=1#failsafe.battery:uint8_t,has_exhausted:bool,g.failsafe_battery_enabled != 0 &amp;&amp; has_armed==true#g.failsafe_battery_enabled:int,has_armed:bool,control_mode==3#control_mode:int8_t,ap.auto_armed==0 &amp;&amp; ap.land_complete==1,0&lt;=ap.auto_armed&lt;=1,0&lt;=ap.land_complete&lt;=1#ap.land_complete:uint8_t,ap.auto_armed:uint8_t</conditions>
      <owned>init_disarm_motors</owned>
      <prob>0.1111111111111111</prob>
      <to>S31</to>
    </arc>
    <arc label="prob" type="common">
      <name>S19_S38_set_mode_RTL_or_land_with_pause()</name>
      <conditions>failsafe.battery==0 &amp;&amp; has_exhausted==true,0&lt;=failsafe.battery&lt;=1#failsafe.battery:uint8_t,has_exhausted:bool,g.failsafe_battery_enabled != 0 &amp;&amp; has_armed==true#g.failsafe_battery_enabled:int,has_armed:bool,control_mode==3#control_mode:int8_t,(ap.auto_armed==1 || ap.land_complete==0)&amp;&amp;home_distance&gt;500,0&lt;=ap.auto_armed&lt;=1,0&lt;=ap.land_complete&lt;=1#ap.land_complete:uint8_t,ap.auto_armed:uint8_t,home_distance:int32_t</conditions>
      <owned>set_mode_RTL_or_land_with_pause</owned>
      <prob>0.1111111111111111</prob>
      <to>S38</to>
    </arc>
    <arc label="prob" type="common">
      <name>S19_S39_set_mode_land_with_pause()</name>
      <conditions>failsafe.battery==0 &amp;&amp; has_exhausted==true,0&lt;=failsafe.battery&lt;=1#failsafe.battery:uint8_t,has_exhausted:bool,g.failsafe_battery_enabled != 0 &amp;&amp; has_armed==true#g.failsafe_battery_enabled:int,has_armed:bool,control_mode==3#control_mode:int8_t,(ap.auto_armed==1 || ap.land_complete==0)&amp;&amp;home_distance&lt;=500,0&lt;=ap.auto_armed&lt;=1,0&lt;=ap.land_complete&lt;=1#ap.land_complete:uint8_t,ap.auto_armed:uint8_t,home_distance:int32_t</conditions>
      <owned>set_mode_land_with_pause</owned>
      <prob>0.1111111111111111</prob>
      <to>S39</to>
    </arc>
    <arc label="prob" type="common">
      <name>S19_S40_init_disarm_motors()</name>
      <conditions>failsafe.battery==0 &amp;&amp; has_exhausted==true,0&lt;=failsafe.battery&lt;=1#failsafe.battery:uint8_t,has_exhausted:bool,g.failsafe_battery_enabled != 0 &amp;&amp; has_armed==true#g.failsafe_battery_enabled:int,has_armed:bool,control_mode!=0&amp;&amp;control_mode!=1&amp;&amp;control_mode!=3#control_mode:int8_t,ap.land_complete==1,0&lt;=ap.land_complete&lt;=1#ap.land_complete:uint8_t</conditions>
      <owned>init_disarm_motors</owned>
      <prob>0.1111111111111111</prob>
      <to>S40</to>
    </arc>
    <arc label="prob" type="common">
      <name>S19_S47_set_mode_RTL_or_land_with_pause()</name>
      <conditions>failsafe.battery==0 &amp;&amp; has_exhausted==true,0&lt;=failsafe.battery&lt;=1#failsafe.battery:uint8_t,has_exhausted:bool,g.failsafe_battery_enabled != 0 &amp;&amp; has_armed==true#g.failsafe_battery_enabled:int,has_armed:bool,control_mode!=0&amp;&amp;control_mode!=1&amp;&amp;control_mode!=3#control_mode:int8_t,ap.land_complete==0 &amp;&amp; g.failsafe_battery_enabled==2 &amp;&amp; home_distance &gt; 500,0&lt;=ap.land_complete&lt;=1#ap.land_complete:uint8_t,g.failsafe_battery_enabled:int,home_distance:int32_t</conditions>
      <owned>set_mode_RTL_or_land_with_pause</owned>
      <prob>0.1111111111111111</prob>
      <to>S47</to>
    </arc>
    <arc label="prob" type="common">
      <name>S19_S48_set_mode_land_with_pause()</name>
      <conditions>failsafe.battery==0 &amp;&amp; has_exhausted==true,0&lt;=failsafe.battery&lt;=1#failsafe.battery:uint8_t,has_exhausted:bool,g.failsafe_battery_enabled != 0 &amp;&amp; has_armed==true#g.failsafe_battery_enabled:int,has_armed:bool,control_mode!=0&amp;&amp;control_mode!=1&amp;&amp;control_mode!=3#control_mode:int8_t,ap.land_complete==0 &amp;&amp; (g.failsafe_battery_enabled!=2 || home_distance &lt;= 500),0&lt;=ap.land_complete&lt;=1#ap.land_complete:uint8_t,g.failsafe_battery_enabled:int,home_distance:int32_t</conditions>
      <owned>set_mode_land_with_pause</owned>
      <prob>0.1111111111111111</prob>
      <to>S48</to>
    </arc>
  </state>
  <state>
    <name>S20</name>
    <arc label="prob" type="common">
      <name>S20_S21_armed()</name>
      <conditions>failsafe.battery==0 &amp;&amp; has_exhausted==true,0&lt;=failsafe.battery&lt;=1#failsafe.battery:uint8_t,has_exhausted:bool,g.failsafe_battery_enabled != 0 &amp;&amp; has_armed==true#g.failsafe_battery_enabled:int,has_armed:bool,control_mode==0 || control_mode==1#control_mode:int8_t,ap.throttle_zero==1 || ap.land_complete==1,0&lt;=ap.throttle_zero&lt;=1,0&lt;=ap.land_complete&lt;=1#ap.land_complete:uint8_t,ap.throttle_zero:uint8_t</conditions>
      <owned>armed</owned>
      <assignValue>motors_armed</assignValue>
      <assignType>bool</assignType>
      <prob>1.0</prob>
      <to>S21</to>
    </arc>
  </state>
  <state>
    <name>S21</name>
    <arc label="prob" type="common">
      <name>S21_S22_set_land_complete(bool)</name>
      <conditions>failsafe.battery==0 &amp;&amp; has_exhausted==true,0&lt;=failsafe.battery&lt;=1#failsafe.battery:uint8_t,has_exhausted:bool,g.failsafe_battery_enabled != 0 &amp;&amp; has_armed==true#g.failsafe_battery_enabled:int,has_armed:bool,control_mode==0 || control_mode==1#control_mode:int8_t,ap.throttle_zero==1 || ap.land_complete==1,0&lt;=ap.throttle_zero&lt;=1,0&lt;=ap.land_complete&lt;=1#ap.land_complete:uint8_t,ap.throttle_zero:uint8_t,motors_armed==true</conditions>
      <owned>set_land_complete</owned>
      <prob>1.0</prob>
      <stimulate>
        <parameter>
          <paramName>b</paramName>
          <paramType>bool</paramType>
          <domain type="discrete">true,false</domain>
        </parameter>
      </stimulate>
      <to>S22</to>
    </arc>
  </state>
  <state>
    <name>S22</name>
    <arc label="prob" type="common">
      <name>S22_S23_set_land_complete_maybe(bool)</name>
      <conditions>failsafe.battery==0 &amp;&amp; has_exhausted==true,0&lt;=failsafe.battery&lt;=1#failsafe.battery:uint8_t,has_exhausted:bool,g.failsafe_battery_enabled != 0 &amp;&amp; has_armed==true#g.failsafe_battery_enabled:int,has_armed:bool,control_mode==0 || control_mode==1#control_mode:int8_t,ap.throttle_zero==1 || ap.land_complete==1,0&lt;=ap.throttle_zero&lt;=1,0&lt;=ap.land_complete&lt;=1#ap.land_complete:uint8_t,ap.throttle_zero:uint8_t,motors_armed==true</conditions>
      <owned>set_land_complete_maybe</owned>
      <prob>1.0</prob>
      <stimulate>
        <parameter>
          <paramName>b</paramName>
          <paramType>bool</paramType>
          <domain type="discrete">true,false</domain>
        </parameter>
      </stimulate>
      <to>S23</to>
    </arc>
  </state>
  <state>
    <name>S23</name>
    <arc label="prob" type="common">
      <name>S23_S24_armed(bool)</name>
      <conditions>failsafe.battery==0 &amp;&amp; has_exhausted==true,0&lt;=failsafe.battery&lt;=1#failsafe.battery:uint8_t,has_exhausted:bool,g.failsafe_battery_enabled != 0 &amp;&amp; has_armed==true#g.failsafe_battery_enabled:int,has_armed:bool,control_mode==0 || control_mode==1#control_mode:int8_t,ap.throttle_zero==1 || ap.land_complete==1,0&lt;=ap.throttle_zero&lt;=1,0&lt;=ap.land_complete&lt;=1#ap.land_complete:uint8_t,ap.throttle_zero:uint8_t,motors_armed==true</conditions>
      <owned>armed</owned>
      <prob>1.0</prob>
      <stimulate>
        <parameter>
          <paramName>arm</paramName>
          <paramType>bool</paramType>
          <domain type="discrete">true,false</domain>
        </parameter>
      </stimulate>
      <to>S24</to>
    </arc>
  </state>
  <state>
    <name>S24</name>
    <arc label="prob" type="void">
      <name>S24_S25</name>
      <conditions></conditions>
      <owned>null</owned>
      <prob>1.0</prob>
      <to>S25</to>
    </arc>
  </state>
  <state>
    <name>S25</name>
    <arc label="prob" type="void">
      <name>S25_S26</name>
      <conditions></conditions>
      <owned>null</owned>
      <prob>1.0</prob>
      <to>S26</to>
    </arc>
  </state>
  <state>
    <name>S26</name>
    <arc label="prob" type="void">
      <name>S26_S30</name>
      <conditions></conditions>
      <owned>null</owned>
      <prob>1.0</prob>
      <to>S30</to>
    </arc>
  </state>
  <state>
    <name>S27</name>
    <arc label="prob" type="void">
      <name>S27_S28</name>
      <conditions></conditions>
      <owned>null</owned>
      <prob>1.0</prob>
      <to>S28</to>
    </arc>
  </state>
  <state>
    <name>S28</name>
    <arc label="prob" type="void">
      <name>S28_S26</name>
      <conditions></conditions>
      <owned>null</owned>
      <prob>1.0</prob>
      <to>S26</to>
    </arc>
  </state>
  <state>
    <name>S29</name>
    <arc label="prob" type="void">
      <name>S29_S28</name>
      <conditions></conditions>
      <owned>null</owned>
      <prob>1.0</prob>
      <to>S28</to>
    </arc>
  </state>
  <state>
    <name>S30</name>
    <arc label="prob" type="void">
      <name>S30_S49</name>
      <conditions></conditions>
      <owned>null</owned>
      <prob>1.0</prob>
      <to>S49</to>
    </arc>
  </state>
  <state>
    <name>S31</name>
    <arc label="prob" type="common">
      <name>S31_S32_armed()</name>
      <conditions>failsafe.battery==0 &amp;&amp; has_exhausted==true,0&lt;=failsafe.battery&lt;=1#failsafe.battery:uint8_t,has_exhausted:bool,g.failsafe_battery_enabled != 0 &amp;&amp; has_armed==true#g.failsafe_battery_enabled:int,has_armed:bool,control_mode==3#control_mode:int8_t,ap.auto_armed==0 &amp;&amp; ap.land_complete==1,0&lt;=ap.auto_armed&lt;=1,0&lt;=ap.land_complete&lt;=1#ap.land_complete:uint8_t,ap.auto_armed:uint8_t</conditions>
      <owned>armed</owned>
      <assignValue>motors_armed</assignValue>
      <assignType>bool</assignType>
      <prob>1.0</prob>
      <to>S32</to>
    </arc>
  </state>
  <state>
    <name>S32</name>
    <arc label="prob" type="common">
      <name>S32_S33_set_land_complete(bool)</name>
      <conditions>failsafe.battery==0 &amp;&amp; has_exhausted==true,0&lt;=failsafe.battery&lt;=1#failsafe.battery:uint8_t,has_exhausted:bool,g.failsafe_battery_enabled != 0 &amp;&amp; has_armed==true#g.failsafe_battery_enabled:int,has_armed:bool,control_mode==3#control_mode:int8_t,ap.auto_armed==0 &amp;&amp; ap.land_complete==1,0&lt;=ap.auto_armed&lt;=1,0&lt;=ap.land_complete&lt;=1#ap.land_complete:uint8_t,ap.auto_armed:uint8_t,motors_armed==true</conditions>
      <owned>set_land_complete</owned>
      <prob>1.0</prob>
      <stimulate>
        <parameter>
          <paramName>b</paramName>
          <paramType>bool</paramType>
          <domain type="discrete">true,false</domain>
        </parameter>
      </stimulate>
      <to>S33</to>
    </arc>
  </state>
  <state>
    <name>S33</name>
    <arc label="prob" type="common">
      <name>S33_S34_set_land_complete_maybe(bool)</name>
      <conditions>failsafe.battery==0 &amp;&amp; has_exhausted==true,0&lt;=failsafe.battery&lt;=1#failsafe.battery:uint8_t,has_exhausted:bool,g.failsafe_battery_enabled != 0 &amp;&amp; has_armed==true#g.failsafe_battery_enabled:int,has_armed:bool,control_mode==3#control_mode:int8_t,ap.auto_armed==0 &amp;&amp; ap.land_complete==1,0&lt;=ap.auto_armed&lt;=1,0&lt;=ap.land_complete&lt;=1#ap.land_complete:uint8_t,ap.auto_armed:uint8_t,motors_armed==true</conditions>
      <owned>set_land_complete_maybe</owned>
      <prob>1.0</prob>
      <stimulate>
        <parameter>
          <paramName>b</paramName>
          <paramType>bool</paramType>
          <domain type="discrete">true,false</domain>
        </parameter>
      </stimulate>
      <to>S34</to>
    </arc>
  </state>
  <state>
    <name>S34</name>
    <arc label="prob" type="common">
      <name>S34_S35_armed(bool)</name>
      <conditions>failsafe.battery==0 &amp;&amp; has_exhausted==true,0&lt;=failsafe.battery&lt;=1#failsafe.battery:uint8_t,has_exhausted:bool,g.failsafe_battery_enabled != 0 &amp;&amp; has_armed==true#g.failsafe_battery_enabled:int,has_armed:bool,control_mode==3#control_mode:int8_t,ap.auto_armed==0 &amp;&amp; ap.land_complete==1,0&lt;=ap.auto_armed&lt;=1,0&lt;=ap.land_complete&lt;=1#ap.land_complete:uint8_t,ap.auto_armed:uint8_t,motors_armed==true</conditions>
      <owned>armed</owned>
      <prob>1.0</prob>
      <stimulate>
        <parameter>
          <paramName>arm</paramName>
          <paramType>bool</paramType>
          <domain type="discrete">true,false</domain>
        </parameter>
      </stimulate>
      <to>S35</to>
    </arc>
  </state>
  <state>
    <name>S35</name>
    <arc label="prob" type="void">
      <name>S35_S36</name>
      <conditions></conditions>
      <owned>null</owned>
      <prob>1.0</prob>
      <to>S36</to>
    </arc>
  </state>
  <state>
    <name>S36</name>
    <arc label="prob" type="void">
      <name>S36_S37</name>
      <conditions></conditions>
      <owned>null</owned>
      <prob>1.0</prob>
      <to>S37</to>
    </arc>
  </state>
  <state>
    <name>S37</name>
    <arc label="prob" type="void">
      <name>S37_S30</name>
      <conditions></conditions>
      <owned>null</owned>
      <prob>1.0</prob>
      <to>S30</to>
    </arc>
  </state>
  <state>
    <name>S38</name>
    <arc label="prob" type="void">
      <name>S38_S37</name>
      <conditions></conditions>
      <owned>null</owned>
      <prob>1.0</prob>
      <to>S37</to>
    </arc>
  </state>
  <state>
    <name>S39</name>
    <arc label="prob" type="void">
      <name>S39_S37</name>
      <conditions></conditions>
      <owned>null</owned>
      <prob>1.0</prob>
      <to>S37</to>
    </arc>
  </state>
  <state>
    <name>S40</name>
    <arc label="prob" type="common">
      <name>S40_S41_armed()</name>
      <conditions>failsafe.battery==0 &amp;&amp; has_exhausted==true,0&lt;=failsafe.battery&lt;=1#failsafe.battery:uint8_t,has_exhausted:bool,g.failsafe_battery_enabled != 0 &amp;&amp; has_armed==true#g.failsafe_battery_enabled:int,has_armed:bool,control_mode!=0&amp;&amp;control_mode!=1&amp;&amp;control_mode!=3#control_mode:int8_t,ap.land_complete==1,0&lt;=ap.land_complete&lt;=1#ap.land_complete:uint8_t</conditions>
      <owned>armed</owned>
      <assignValue>motors_armed</assignValue>
      <assignType>bool</assignType>
      <prob>1.0</prob>
      <to>S41</to>
    </arc>
  </state>
  <state>
    <name>S41</name>
    <arc label="prob" type="common">
      <name>S41_S42_set_land_complete(bool)</name>
      <conditions>failsafe.battery==0 &amp;&amp; has_exhausted==true,0&lt;=failsafe.battery&lt;=1#failsafe.battery:uint8_t,has_exhausted:bool,g.failsafe_battery_enabled != 0 &amp;&amp; has_armed==true#g.failsafe_battery_enabled:int,has_armed:bool,control_mode!=0&amp;&amp;control_mode!=1&amp;&amp;control_mode!=3#control_mode:int8_t,ap.land_complete==1,0&lt;=ap.land_complete&lt;=1#ap.land_complete:uint8_t,motors_armed==true</conditions>
      <owned>set_land_complete</owned>
      <prob>1.0</prob>
      <stimulate>
        <parameter>
          <paramName>b</paramName>
          <paramType>bool</paramType>
          <domain type="discrete">true,false</domain>
        </parameter>
      </stimulate>
      <to>S42</to>
    </arc>
  </state>
  <state>
    <name>S42</name>
    <arc label="prob" type="common">
      <name>S42_S43_set_land_complete_maybe(bool)</name>
      <conditions>failsafe.battery==0 &amp;&amp; has_exhausted==true,0&lt;=failsafe.battery&lt;=1#failsafe.battery:uint8_t,has_exhausted:bool,g.failsafe_battery_enabled != 0 &amp;&amp; has_armed==true#g.failsafe_battery_enabled:int,has_armed:bool,control_mode!=0&amp;&amp;control_mode!=1&amp;&amp;control_mode!=3#control_mode:int8_t,ap.land_complete==1,0&lt;=ap.land_complete&lt;=1#ap.land_complete:uint8_t,motors_armed==true</conditions>
      <owned>set_land_complete_maybe</owned>
      <prob>1.0</prob>
      <stimulate>
        <parameter>
          <paramName>b</paramName>
          <paramType>bool</paramType>
          <domain type="discrete">true,false</domain>
        </parameter>
      </stimulate>
      <to>S43</to>
    </arc>
  </state>
  <state>
    <name>S43</name>
    <arc label="prob" type="common">
      <name>S43_S44_armed(bool)</name>
      <conditions>failsafe.battery==0 &amp;&amp; has_exhausted==true,0&lt;=failsafe.battery&lt;=1#failsafe.battery:uint8_t,has_exhausted:bool,g.failsafe_battery_enabled != 0 &amp;&amp; has_armed==true#g.failsafe_battery_enabled:int,has_armed:bool,control_mode!=0&amp;&amp;control_mode!=1&amp;&amp;control_mode!=3#control_mode:int8_t,ap.land_complete==1,0&lt;=ap.land_complete&lt;=1#ap.land_complete:uint8_t,motors_armed==true</conditions>
      <owned>armed</owned>
      <prob>1.0</prob>
      <stimulate>
        <parameter>
          <paramName>arm</paramName>
          <paramType>bool</paramType>
          <domain type="discrete">true,false</domain>
        </parameter>
      </stimulate>
      <to>S44</to>
    </arc>
  </state>
  <state>
    <name>S44</name>
    <arc label="prob" type="void">
      <name>S44_S45</name>
      <conditions></conditions>
      <owned>null</owned>
      <prob>1.0</prob>
      <to>S45</to>
    </arc>
  </state>
  <state>
    <name>S45</name>
    <arc label="prob" type="void">
      <name>S45_S46</name>
      <conditions></conditions>
      <owned>null</owned>
      <prob>1.0</prob>
      <to>S46</to>
    </arc>
  </state>
  <state>
    <name>S46</name>
    <arc label="prob" type="void">
      <name>S46_S30</name>
      <conditions></conditions>
      <owned>null</owned>
      <prob>1.0</prob>
      <to>S30</to>
    </arc>
  </state>
  <state>
    <name>S47</name>
    <arc label="prob" type="void">
      <name>S47_S46</name>
      <conditions></conditions>
      <owned>null</owned>
      <prob>1.0</prob>
      <to>S46</to>
    </arc>
  </state>
  <state>
    <name>S48</name>
    <arc label="prob" type="void">
      <name>S48_S46</name>
      <conditions></conditions>
      <owned>null</owned>
      <prob>1.0</prob>
      <to>S46</to>
    </arc>
  </state>
  <state>
    <name>S49</name>
    <arc label="prob" type="common">
      <name>S49_S50_set_failsafe_battery(bool)</name>
      <conditions>failsafe.battery==0 &amp;&amp; has_exhausted==true,0&lt;=failsafe.battery&lt;=1#failsafe.battery:uint8_t,has_exhausted:bool</conditions>
      <owned>set_failsafe_battery</owned>
      <assignValue>failsafe.battery</assignValue>
      <assignType>uin</assignType>
      <prob>1.0</prob>
      <stimulate>
        <parameter>
          <paramName>b</paramName>
          <paramType>bool</paramType>
          <domain type="discrete">true,false</domain>
        </parameter>
      </stimulate>
      <to>S50</to>
    </arc>
  </state>
  <state>
    <name>S50</name>
    <arc label="prob" type="void">
      <name>S50_S51</name>
      <conditions></conditions>
      <owned>null</owned>
      <prob>1.0</prob>
      <to>S51</to>
    </arc>
  </state>
  <state>
    <name>S51</name>
    <arc label="prob" type="common">
      <name>S51_S52_get_control_mode()</name>
      <conditions></conditions>
      <owned>get_control_mode</owned>
      <assignValue>_control_mode</assignValue>
      <assignType>int</assignType>
      <prob>1.0</prob>
      <to>S52</to>
    </arc>
  </state>
  <state>
    <name>S52</name>
    <arc label="prob" type="common">
      <name>S52_S53_armed()</name>
      <conditions></conditions>
      <owned>armed</owned>
      <assignValue>_motors_armed</assignValue>
      <assignType>bool</assignType>
      <prob>1.0</prob>
      <to>S53</to>
    </arc>
  </state>
  <state>
    <name>S53</name>
    <arc label="prob" type="common">
      <name>S53_S54_get_throttle()</name>
      <conditions>g.compass_enabled==1,0&lt;=g.compass_enabled&lt;=1#g.compass_enabled:int32_t</conditions>
      <owned>get_throttle</owned>
      <assignValue>get_throttle</assignValue>
      <assignType>float</assignType>
      <prob>1.0</prob>
      <to>S54</to>
    </arc>
  </state>
  <state>
    <name>S54</name>
    <arc label="prob" type="common">
      <name>S54_S55_set_throttle(float)</name>
      <conditions>g.compass_enabled==1,0&lt;=g.compass_enabled&lt;=1#g.compass_enabled:int32_t</conditions>
      <owned>set_throttle</owned>
      <prob>1.0</prob>
      <stimulate>
        <parameter>
          <paramName>a</paramName>
          <paramType>float</paramType>
          <domain type="serial">-1500&lt;a&lt;1500</domain>
        </parameter>
      </stimulate>
      <to>S55</to>
    </arc>
  </state>
  <state>
    <name>S55</name>
    <arc label="prob" type="common">
      <name>S55_S56_read()</name>
      <conditions>g.compass_enabled==1,0&lt;=g.compass_enabled&lt;=1#g.compass_enabled:int32_t</conditions>
      <owned>read</owned>
      <assignValue>compass_read</assignValue>
      <assignType>bool</assignType>
      <prob>1.0</prob>
      <to>S56</to>
    </arc>
  </state>
  <state>
    <name>S56</name>
    <arc label="prob" type="void">
      <name>S56_S57</name>
      <conditions></conditions>
      <owned>null</owned>
      <prob>1.0</prob>
      <to>S57</to>
    </arc>
  </state>
  <state>
    <name>S57</name>
    <arc label="prob" type="void">
      <name>S57_S58</name>
      <conditions></conditions>
      <owned>null</owned>
      <prob>1.0</prob>
      <to>Exit</to>
    </arc>
  </state>
  <state label="final">
    <name>Exit</name>
  </state>
</Model>
